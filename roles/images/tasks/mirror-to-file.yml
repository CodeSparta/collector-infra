---
- name: '{{ ansible_name_module }} | stat | check for mirror v2.sha256'
  stat:
    path: '{{ dir_one }}/mirror/v2.sha256'  
  register: mirror_sha_check

###### Download OpenShift Docker Images from Quay.io to File: /root/PlatformOne/Mirror/v2
- name: '{{ ansible_name_module }} | block | Download OpenShift images'
  block:

  ######### Purge & Prepare
    - name: '{{ ansible_name_module }} | file:absent | Purge pre-existing content'
      file:
        path: "{{ dir_one }}/mirror"
        state: absent
    - name: '{{ ansible_name_module }} | file:directory | Create mirror artifact directories'
      file:
        path: "{{ item }}"
        state: directory
        mode: 0755
      loop:
        - "{{ dir_one }}/mirror"
        - "{{ local_home }}/.docker"

  ######### Mirror Images to directory
    - name: '{{ ansible_name_module }} | shell:oc.adm.release.mirror | Sync content from quay.io'
      shell: |
        oc adm release mirror \
        --from=quay.io/openshift-release-dev/ocp-release:{{ version_openshift }}-x86_64 \
        --to-dir={{ dir_one }}/mirror

######### Rescue block if there are any failures in the above block
  rescue:

  ######### Purge & Prepare
    - name: '{{ ansible_name_module }} | file:absent | Purge pre-existing content | RESCUE | Second Attempt!'
      file:
        path: "{{ dir_one }}/mirror"
        state: absent
    - name: '{{ ansible_name_module }} | file:directory | Create mirror artifact directories | RESCUE | Second Attempt!'
      file:
        path: "{{ dir_one }}/mirror"
        state: directory

  ######### Mirror Images to directory
    - name: '{{ ansible_name_module }} | shell:oc.adm.release.mirror | Sync content from quay.io | RESCUE | Second Attempt!'
      shell: |
        oc adm release mirror \
        --from=quay.io/openshift-release-dev/ocp-release:{{ version_openshift }}-x86_64 \
        --to-dir={{ dir_one }}/mirror
      register: mirror

  ####### Block Conditionals
  when: mirror_sha_check.stat.exists == False

###### END OF BLOCK #######

- name: '{{ ansible_name_module }} | stat | sha256 mirror/v2 directory'
  stat:
    path: "{{ dir_one }}/v2"
    checksum_algorithm: sha256
    get_checksum: yes
  register: mirror_sha256

- name: '{{ ansible_name_module }} | copy:content | place mirror/v2 sha256 file'
  copy:
    dest: "{{ dir_one }}/mirror/v2.sha256"
    content: '{{ mirror_sha256.stdout }} v2.sha256'
